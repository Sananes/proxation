@import '../../assets/scss/helpers';

$menu-delay: 3s / 18;
$menu-total-duration: $menu-delay * 3;

@keyframes fadeIn {
  0% {
    opacity: 0;
    transform: translateY(-5px);
  }

  100% {
    opacity: 100;
    transform: translateY(0);
  }
}

@keyframes fixed {
  0% {
    position: relative;
    width: 100%;
  }

  100% {
    position: fixed;
    width: 100%;
  }
}

.root {
  position: fixed;
  top: 0;
  z-index: 9999;
  width: 100%;
  background: $color-header-background;


  // when nav is activated
  &.showNav {
    z-index: 9999;
    position: fixed;
    top: 0;
    background: transparent;
    color: $text-light;
  }

  &.transparent {
    color: $text-light;
    background: white;
    border-bottom: none;
  }
}

.wrapper {
  @extend %container;
  padding-top: 0;
  padding-bottom: 0;
  display: flex;
  justify-content: space-between;
  align-items: center;
  height: $header-mobile-height;
  transition: height 300ms ease-in-out;
  padding-left: 1rem;
  padding-right: 1rem;

  @include breakpoint-lg {
    height: $header-height;

  }
}

.branding {
  @include clear-top-margin;
  flex: 1;
  font-size: inherit;
  font-size: 24px;
  font-weight: bold;
  letter-spacing: 0;
  text-decoration: none;
  margin: 0;

  .title {
    opacity: 0;
    visibility: hidden;
  }

  a {
    display: inline-block;
    padding-left: 0;
    padding-right: 0;
    color: $color-primary;

    // when nav is active
    // color: $text-light;

    .showNav & {
      color: $text-light;

      &:hover {
        color: $text-light;
        text-decoration: none;
      }
    }
  }
}

.toggleNavButton {
  appearance: none;
  font-size: 25px;
  border: none;
  background: none;
  margin-right: -5px;
  padding: calc(14 / 17 / 2 * 1rem);
  outline: none;
  cursor: pointer;
  color: inherit;

  @include breakpoint-md {}

  & svg {
    display: block;
  }
}

.nav {
  position: fixed;
  top: 0;
  width: 100%;
  height: 100%;
  display: flex;
  min-height: 100%;
  background: $color-primary;
  color: $text-light;
  z-index: 9997;
  overflow-y: scroll;


  @include breakpoint-md {
    overflow-y: hidden;
    align-items: center;
  }


  .container {
    @extend %container;
    margin-top: $header-mobile-height;
    width: 100%;
    display: flex;
    flex-direction: column;


    @include breakpoint-md {
      margin-top: -$header-height / 2;
      justify-content: space-around;
    }
  }



  .menuWrapper {}


  .navItem {
    @include h2;
    font-weight: $font-weight-medium;
    transition: color 300ms ease-in-out;


    &:hover {
      color: $text-light-subdued;
    }

    span {
      @include overline;
      margin-left: -24px;
      margin-top: 10px;
      float: left;
      display: none;

      @include breakpoint-md {
        display: inline-block;
      }
    }
  }

  .bottomWrapper {
    @include interpolate(margin-top, 24px, 64px)
  }

  .address,
  .kontakt {

    @include breakpoint-md {
      lost-column: 1/3;
    }

    ul {
      padding: 0;
      margin: 0;
    }
  }

  .address {
    @include body;
    color: $text-light-dimmed;
    font-style: normal;
  }

  .kontakt {
    a {
      color: inherit;
    }
  }



  .menuBlock {
    margin: 0;
    padding: 0;
    flex: 1;
    margin-bottom: 32px;

    @include breakpoint-md {
      lost-column: 1/3;
    }

    &>li a {
      display: block;
      color: inherit;
      text-decoration: none;


    }

  }

  .menuBlockLast {
    margin-bottom: 0;
  }

  .menuBlockLast li a {
    margin-bottom: 16px;
  }
}

.subMenu {
  margin: 0;
  padding: 0;
  color: $text-light-subdued;

  @include breakpoint-md {
    margin: 24px 0 0 0;
  }
}

.subMenu li {
  @include body-l;
  letter-spacing: 0;
  line-height: 1;
  margin: 0;
  padding: 5px;
  font-weight: $font-weight-normal;

  @include breakpoint-md {
    padding: 0;
  }

  a {
    padding: 0;
    margin: 0;
    color: $text-light-subdued;
    transition: color 300ms ease-in-out;

    &:hover {
      color: $text-light;
    }
  }
}

.animate {
  &.root {
    background: transparent;
    color: $text-light;

    .branding a {
      transition: color 500ms ease-in-out;
    }
  }
}

.animateEnterActive {

  .root {
    transition: color 500ms ease-in-out;
  }

  &.nav {
    animation: 0.2s ease-in-out 0s backwards;
    animation-name: fadeIn;
  }

  .menuBlock,
  .block,
  .subMenu {
    animation: 0.5s ease-in-out 0s backwards;
    animation-name: fadeIn;
  }

  @for $i from 1 through 3 {
    .menuBlock {

      // :nth-child(1-9)
      &:nth-child(#{$i}) {
        // Delay the animation. Delay increases as items loop.
        animation-delay: $i * ($menu-delay);

        @for $i from 1 through 5 {
          .subMenu li:nth-child(#{$i}) {
            animation-delay: 100ms + $i * (5s / 18);
          }
        }
      }
    }
  }

  @for $i from 1 through 2 {
    .block {
      &:nth-child(#{$i}) {
        animation-delay: ($menu-delay * 2) + $i * ($menu-delay);
      }
    }
  }

}

.animateExitActive {

  .menuBlock,
  .block,
  .subMenu {
    animation: 300ms ease 0s forwards reverse;
    animation-name: fadeIn;
  }

  @for $i from 1 through 3 {
    .menuBlock {

      // :nth-child(1-9)
      &:nth-child(#{$i}) {
        // Delay the animation. Delay increases as items loop.
        animation-delay: $i * ($menu-delay);

        @for $i from 1 through 5 {
          .subMenu li:nth-child(#{$i}) {
            animation-delay: $i * (5s / 18);
          }
        }
      }
    }
  }

  @for $i from 1 through 2 {
    .block {
      &:nth-child(#{$i}) {
        animation-delay: $i * ($menu-delay);
      }
    }
  }
}

.animateExit {

  &.nav {
    animation: 300ms ease $menu-total-duration forwards reverse;
    animation-name: fadeIn;
  }

  &.root {
    background: none;

    .branding a,
    .toggleNavButton {
      transition: color 300ms $menu-total-duration ease-in-out;
    }
  }
}
